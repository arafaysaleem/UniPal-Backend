name: Node Build, Test And Lint CI

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.sql'
      - '**.zip'
      - '.gitignore'

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Installing npm
      run: npm install
    - name: Code linting
      run: npm run lint
    - name: Load config vars into .env
      env:
        CONFIG_VARS: ${{ secrets.CONFIG_VARS }}
      # Load env variable from config to a .env file and also load them in the CI environment
      # These can be accessed from the CI environment using $ENV_VAR_NAME
      run: |
        echo $CONFIG_VARS > .env
        source .env 
    - name: Setup MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -u ${{ env.DB_USER }} -p${{ env.DB_PASS }} -e "CREATE DATABASE ${{ env.DB_DATABASE }};"
        mysql --host="${{ env.DB_HOST }}" --port="3306" --database="${{ env.DB_DATABASE }}" --user="${{ env.DB_USER }}" --password="${{ env.DB_PASS }}"  < "./backups/unipal_test_db.sql"
      env:
        DATABASE_PORT: '3306'
        DATABASE_HOST: ${{ env.DB_HOST }}
        DATABASE_NAME: ${{ env.DB_DATABASE }}
        DATABASE_USERNAME: ${{ env.DB_USER }}
        DATABASE_PASSWORD: ${{ env.DB_PASS }}
        DATABASE_SCRIPT: './backups/unipal_test_db.sql'
    - name: Running tests
      run: npm test
      env:
        CI: true
        PORT: 3000
        DB_HOST: $DB_HOST
        DB_USER: $DB_USER
        DB_PASS: $DB_PASS
        DB_DATABASE: $DB_DATABASE
        SECRET_JWT: ${{ secrets.SECRET_JWT }}
        # SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        # SENDGRID_SENDER: ${{ secrets.SENDGRID_SENDER }}
