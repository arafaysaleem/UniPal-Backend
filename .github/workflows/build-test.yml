name: Node Build, Test And Lint CI

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.sql'
      - '**.zip'
      - '.gitignore'

  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Installing npm
      run: npm install
    - name: Code linting
      run: npm run lint
    - name: Setup MySQL
      env:
        DB_PORT: 3306
        DB_SCRIPT: './backups/unipal_test_db.sql'
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_DATABASE: ${{ secrets.DB_TEST_DATABASE }}
      run: |
        sudo /etc/init.d/mysql start
        mysql -u $DB_USER -p$DB_PASS -e "CREATE DATABASE $DB_DATABASE;"
        mysql --host="$DB_HOST" --port="$DB_PORT" --database="$DB_DATABASE" --user="$DB_USER" --password="$DB_PASS" < "$DB_SCRIPT"
    - name: Running tests
      run: npm test
      env:
        CI: true
        PORT: 3000
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_DATABASE: ${{ secrets.DB_TEST_DATABASE }}
        SECRET_JWT: ${{ secrets.SECRET_JWT }}
        # SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        # SENDGRID_SENDER: ${{ secrets.SENDGRID_SENDER }}
